name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: ["ubuntu-20.04", "ubuntu-22.04"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: Swatinem/rust-cache@v2
      - name: "check cgroup version"
        run: "mount | grep cgroup"
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Setup OCI runtime build env
        run: |
          sudo apt -y update
          sudo apt install -y pkg-config libsystemd-dev libdbus-glib-1-dev build-essential libelf-dev libseccomp-dev libclang-dev
      - name: Setup WasmEdge build env
        run: |
          curl -sSf https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/utils/install.sh | bash -s -- --version=0.11.2
          echo "LD_LIBRARY_PATH=$HOME/.wasmedge/lib" >> $GITHUB_ENV
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --verbose
      - name: Validate docs
        run: ./scripts/validate-docs.sh
      - name: Run tests
        run: |
          sudo -E LD_LIBRARY_PATH=/home/runner/.wasmedge/lib /home/runner/.cargo/bin/cargo test --all --verbose

  e2e:
    needs: [build]
    strategy:
      matrix:
        # 20.04 uses cgroupv1, 22.04 uses cgroupv2
        os: ["ubuntu-20.04", "ubuntu-22.04"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: "check cgroup version"
        run: "mount | grep cgroup"
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: setup rust-wasm target
        run: rustup target add wasm32-wasi
      - name: run
        run: make test/k8s/deploy
      - name: cleanup
        if: always()
        run: make test/k8s/clean
