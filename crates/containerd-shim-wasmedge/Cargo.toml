[package]
name = "containerd-shim-wasmedge"
version.workspace = true
edition.workspace = true

[dependencies]
containerd-shim ={ workspace = true }
containerd-shim-wasm = { path = "../containerd-shim-wasm" }
log = { workspace = true }
ttrpc = { workspace = true }
wasmedge-sdk = { version = "0.7.1", features = ["async"] }
chrono = { workspace = true }
anyhow = { workspace = true }
cap-std = { workspace = true }
oci-spec = { workspace = true, features = ["runtime"] }
thiserror = { workspace = true }
serde_json = { workspace = true }
libc = { workspace = true }

[dev-dependencies]
tempfile = "3.0"
pretty_assertions = "1"
serial_test = "*"
# Depend on the built Wasm modules. This requires "-Z bindep" parameter to cargo which is only
# available in the nightly channel. The workaround is to build first and test afterwards:
#     cargo build -p test/wasi-modules-for-testing --target=wasm32-wasi
#     cargo test
# wasi-modules-for-testing = { path = "../../test/wasi-modules-for-testing", artifact = "bin" }

[features]
wasi_nn = ["wasmedge-sdk/wasi_nn"]

[[bin]]
name = "containerd-shim-wasmedge-v1"
path = "src/bin/containerd-shim-wasmedge-v1/main.rs"

[[bin]]
name = "containerd-shim-wasmedged-v1"
path = "src/bin/containerd-shim-wasmedged-v1/main.rs"

[[bin]]
name = "containerd-wasmedged"
path = "src/bin/containerd-wasmedged/main.rs"
